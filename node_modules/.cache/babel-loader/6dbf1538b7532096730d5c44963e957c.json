{"ast":null,"code":"import _classCallCheck from \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/src/components/Info/Info.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalDialog, ModalContent, ModalHeader, ModalBody, ModalFooter, Button, Typography } from '@smooth-ui/core-sc';\nimport * as Styled from './style';\n\nvar Info =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Info, _Component);\n\n  function Info() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Info);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Info)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      show: false\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleShow = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Info, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Styled.Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        width: 1,\n        minHeight: 40,\n        fontSize: 22,\n        type: \"button\",\n        onClick: this.handleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"How To Play\"), React.createElement(Modal, {\n        opened: this.state.show,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ModalDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ModalContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h2\",\n        textAlign: \"center\",\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Game Rules\")), React.createElement(ModalBody, {\n        fontSize: 20,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"This is a Number Guessing Game with the following rules:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), \"1. The machine picks a random number between 1 to 100 and keeps it hidden.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"2. You need to guess until you can find the hidden secret number.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"3. You will get feedback on how close or far your guess is in the form of the following keywords (\\\"cold\\\", \\\"warm\\\", \\\"hot\\\", \\\"extremely hot\\\").\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"Everything clear?\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        size: \"md\",\n        width: 0.3,\n        mt: 10,\n        minHeight: 40,\n        fontSize: 22,\n        type: \"button\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"YES\"))))));\n    }\n  }]);\n\n  return Info;\n}(Component);\n\nexport default Info;","map":{"version":3,"sources":["/Users/ivanspoljaric/Desktop/Documents/Thinkful/Projects/redux-hot-cold-app/src/components/Info/Info.js"],"names":["React","Component","Modal","ModalDialog","ModalContent","ModalHeader","ModalBody","ModalFooter","Button","Typography","Styled","Info","state","show","handleClose","setState","handleShow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SACEC,KADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,MAPF,EAQEC,UARF,QASO,oBATP;AAWA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;;IAEMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,K;;UAEDG,U,GAAa,YAAM;AACjB,YAAKD,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,K;;;;;;;6BAGQ;AACP,aACE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,KAAK,EAAE,CAA9B;AAAiC,QAAA,SAAS,EAAE,EAA5C;AAAgD,QAAA,QAAQ,EAAE,EAA1D;AAA8D,QAAA,IAAI,EAAC,QAAnE;AAA4E,QAAA,OAAO,EAAE,KAAKG,UAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,IAA1B;AAAgC,QAAA,OAAO,EAAE,KAAKC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,QAAnC;AAA4C,QAAA,KAAK,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAFF,EAQE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,EAArB;AAAyB,QAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,gFAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,uEAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,wJAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,sBARF,EAwBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,IAA/B;AAAoC,QAAA,KAAK,EAAE,GAA3C;AAAgD,QAAA,EAAE,EAAE,EAApD;AAAwD,QAAA,SAAS,EAAE,EAAnE;AAAuE,QAAA,QAAQ,EAAE,EAAjF;AAAqF,QAAA,IAAI,EAAC,QAA1F;AAAmG,QAAA,OAAO,EAAE,KAAKA,WAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAxBF,CADF,CADF,CAJF,CADF;AA0CD;;;;EA7DgBb,S;;AAgEnB,eAAeU,IAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {\n  Modal,\n  ModalDialog,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button, \n  Typography\n} from '@smooth-ui/core-sc';\n\nimport * as Styled from './style';\n\nclass Info extends Component {\n  state = {\n    show: false\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow = () => {\n    this.setState({\n      show: true\n    });\n  }\n\n\n  render() {\n    return (\n      <Styled.Info>\n        <Button variant=\"info\" width={1} minHeight={40} fontSize={22} type=\"button\" onClick={this.handleShow}>\n          How To Play\n        </Button>\n        <Modal opened={this.state.show} onClose={this.handleClose}>\n          <ModalDialog>\n            <ModalContent>\n\n              <ModalHeader>\n                <Typography variant=\"h2\" textAlign=\"center\" color=\"black\">\n                  Game Rules\n                </Typography>\n              </ModalHeader>\n      \n              <ModalBody fontSize={20} color=\"black\">\n                This is a Number Guessing Game with the following rules:\n                <br />\n                <br />\n                1. The machine picks a random number between 1 to 100 and keeps it hidden.\n                <br />\n                <br />\n                2. You need to guess until you can find the hidden secret number.\n                <br />\n                <br />\n                3. You will get feedback on how close or far your guess is in the form of the following keywords (\"cold\", \"warm\", \"hot\", \"extremely hot\").\n                <br />\n                <br />\n                Everything clear?\n              </ModalBody>\n      \n              <ModalFooter>\n                <Button variant=\"success\" size=\"md\" width={0.3} mt={10} minHeight={40} fontSize={22} type=\"button\" onClick={this.handleClose}>\n                  YES\n                </Button>\n              </ModalFooter>\n\n            </ModalContent>\n          </ModalDialog>\n        </Modal>\n      </Styled.Info>\n    );\n  }\n}\n\nexport default Info;"]},"metadata":{},"sourceType":"module"}